{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1a4pUKkMoZBnFeVXLrT1H2aZ6SkFY_mjh","authorship_tag":"ABX9TyMzfoKCIO+ZlztqfXlhuxVO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### 목표\n","- 폐암 환자의 생존을 예측하는 분류 모델을 만들어보자\n","- 신경망을 활용하여 2진분류 문제를 해결해보자!"],"metadata":{"id":"uiLx7P5r32fd"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"D_L6rV--Fcn_","executionInfo":{"status":"ok","timestamp":1692232631104,"user_tz":-540,"elapsed":370,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["#print working directory : 현재 작업 경로 출력\n","%pwd"],"metadata":{"id":"OzkjpU7BFrY1","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1692232631437,"user_tz":-540,"elapsed":7,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"9357272a-bdf0-4679-b8a8-e0e3291afc2e"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["%cd /content/drive/MyDrive/Colab Notebooks/SW캠프 데이터 비즈니스 과정"],"metadata":{"id":"g1ma_a_-Fri4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692232631437,"user_tz":-540,"elapsed":6,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"23260cc4-0713-4e27-f732-eb5dd8e5166a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/SW캠프 데이터 비즈니스 과정\n"]}]},{"cell_type":"code","source":["%pwd"],"metadata":{"id":"uGr-qHgiFrnn","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1692232631438,"user_tz":-540,"elapsed":5,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"841e053f-d215-44f1-e95f-c8a2fd987d73"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/drive/MyDrive/Colab Notebooks/SW캠프 데이터 비즈니스 과정'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":[],"metadata":{"id":"v3E7fCzeFsaJ"}},{"cell_type":"code","source":["data = pd.read_csv('data/ThoraricSurgery.csv', header=None)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"kYk_nY9432O1","executionInfo":{"status":"ok","timestamp":1692232632239,"user_tz":-540,"elapsed":805,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"e310a066-81bd-44dd-915d-c52c4616e85d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0   1     2     3   4   5   6   7   8   9   10  11  12  13  14  15  16  \\\n","0    293   1  3.80  2.80   0   0   0   0   0   0  12   0   0   0   1   0  62   \n","1      1   2  2.88  2.16   1   0   0   0   1   1  14   0   0   0   1   0  60   \n","2      8   2  3.19  2.50   1   0   0   0   1   0  11   0   0   1   1   0  66   \n","3     14   2  3.98  3.06   2   0   0   0   1   1  14   0   0   0   1   0  80   \n","4     17   2  2.21  1.88   0   0   1   0   0   0  12   0   0   0   1   0  56   \n","..   ...  ..   ...   ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..   \n","465   98   6  3.04  2.40   2   0   0   0   1   0  11   0   0   0   1   0  76   \n","466  369   6  3.88  2.72   1   0   0   0   1   0  12   0   0   0   1   0  77   \n","467  406   6  5.36  3.96   1   0   0   0   1   0  12   0   0   0   0   0  62   \n","468   25   8  4.32  3.20   0   0   0   0   0   0  11   0   0   0   0   0  58   \n","469  447   8  5.20  4.10   0   0   0   0   0   0  12   0   0   0   0   0  49   \n","\n","     17  \n","0     0  \n","1     0  \n","2     1  \n","3     1  \n","4     0  \n","..   ..  \n","465   0  \n","466   0  \n","467   0  \n","468   1  \n","469   0  \n","\n","[470 rows x 18 columns]"],"text/html":["\n","\n","  <div id=\"df-15fffe0a-0eb1-4a48-9dc6-967086fc852f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","      <th>13</th>\n","      <th>14</th>\n","      <th>15</th>\n","      <th>16</th>\n","      <th>17</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>293</td>\n","      <td>1</td>\n","      <td>3.80</td>\n","      <td>2.80</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2.88</td>\n","      <td>2.16</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>3.19</td>\n","      <td>2.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>66</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>3.98</td>\n","      <td>3.06</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>80</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17</td>\n","      <td>2</td>\n","      <td>2.21</td>\n","      <td>1.88</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>56</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>465</th>\n","      <td>98</td>\n","      <td>6</td>\n","      <td>3.04</td>\n","      <td>2.40</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>466</th>\n","      <td>369</td>\n","      <td>6</td>\n","      <td>3.88</td>\n","      <td>2.72</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>77</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>467</th>\n","      <td>406</td>\n","      <td>6</td>\n","      <td>5.36</td>\n","      <td>3.96</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>468</th>\n","      <td>25</td>\n","      <td>8</td>\n","      <td>4.32</td>\n","      <td>3.20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>58</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>469</th>\n","      <td>447</td>\n","      <td>8</td>\n","      <td>5.20</td>\n","      <td>4.10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>49</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>470 rows × 18 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15fffe0a-0eb1-4a48-9dc6-967086fc852f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-dccc2592-2ee1-4748-9228-05ed2c84f7b0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dccc2592-2ee1-4748-9228-05ed2c84f7b0')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-dccc2592-2ee1-4748-9228-05ed2c84f7b0 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-15fffe0a-0eb1-4a48-9dc6-967086fc852f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-15fffe0a-0eb1-4a48-9dc6-967086fc852f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["X = data.iloc[:,:17]\n","y = data[17]\n","X.shape, y.shape"],"metadata":{"id":"Kd0nS9VCW8Zv","executionInfo":{"status":"ok","timestamp":1692232632240,"user_tz":-540,"elapsed":6,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"26b36930-bc83-467a-d2cd-5280b4a68acd"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((470, 17), (470,))"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=999)\n"],"metadata":{"id":"G0Kt4RmLW8b5","executionInfo":{"status":"ok","timestamp":1692232633524,"user_tz":-540,"elapsed":1288,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["### 딥러닝 신경망 구성\n","- 1. 신경망 구조 설계\n","- 2. 학습 및 평가방법 설정\n","- 3. 학습 + 시각화\n","- 4. 모델 평가"],"metadata":{"id":"VyxwznAD_tkL"}},{"cell_type":"code","source":["from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense"],"metadata":{"id":"ihzmYnYP_szM","executionInfo":{"status":"ok","timestamp":1692232636557,"user_tz":-540,"elapsed":3035,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# 1. 신경망 구조 설계\n","model = Sequential()\n","\n","# 입력층(input_dim) + 중간층 1개(Dense)\n","#activation :활성화 함수(들어온 자극(데이터)에 대한 응답 여부를 결정하는 함수)\n","model.add(Dense(16, input_dim = 17, activation='sigmoid'))\n","\n","# 중간층\n","model.add(Dense(8, activation='sigmoid')) # 하나의 층\n","model.add(Dense(4, activation='sigmoid')) # 하나의 층\n","\n","# 출력층\n","# 출력층은 문제의 종류에 따라서 고정됨(2진 분류 문제는 출력층 뉴런 개수 1개, 활성화 함수는 sigmoid로 고정)\n","model.add(Dense(1, activation='sigmoid'))\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9aS3VKjH8uXz","executionInfo":{"status":"ok","timestamp":1692232637015,"user_tz":-540,"elapsed":460,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"3c1bedaf-8d1c-4e69-8c67-e808a1570a20"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 16)                288       \n","                                                                 \n"," dense_1 (Dense)             (None, 8)                 136       \n","                                                                 \n"," dense_2 (Dense)             (None, 4)                 36        \n","                                                                 \n"," dense_3 (Dense)             (None, 1)                 5         \n","                                                                 \n","=================================================================\n","Total params: 465\n","Trainable params: 465\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["### activation(활성화 함수) - 자극에 대한 반응 여부와 정도를 결정하는 함수\n","- 1. 회귀 : linear(선형함수) -> 신경망에서 도출된 수치 값을 그대로 예측에 사용(신경망은 회귀모델을 기반으로 동작하기 때문\n","- 2. 분류 : 인공 신경망은 선형 회귀 모델을 기반으로 하고 있기 때문에 여기서 도출된 수치 값으로는 분류 문제를 풀기 힘듦\n","  - 이진 분류Binary함수를 통해서 최종적으로 0 or 1로 분류 해낼 수 있음"],"metadata":{"id":"1elD6i0U5VEy"}},{"cell_type":"code","source":["# 2. 학습 및 평가방법 설정\n","# binary_crossentropy : 2진분류에 사용하는 손실함수\n","# -> 오차의 평균을 구하는 것은 mse와 같지만0~1사이 값(분류를 편하게 하기 위해)으로 변환 후 평균 오차를 구해냄\n","model.compile(loss='binary_crossentropy',\n","              optimizer='SGD', # 최적화 함수 : 확률적 경사하강법(SGD) 활용\n","              metrics = ['acc'] # metrics : 평가방법을 설정 (분류 문제이므로 정확도 출력 필요)              )\n","              )"],"metadata":{"id":"EulN3YpW8uU0","executionInfo":{"status":"ok","timestamp":1692232637015,"user_tz":-540,"elapsed":2,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["h = model.fit(X_train, y_train,\n","              epochs=100\n","              )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ez6duVL08uSP","executionInfo":{"status":"ok","timestamp":1692232642467,"user_tz":-540,"elapsed":5453,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"487e5a21-980e-4e81-f258-54dc266cdf46"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","11/11 [==============================] - 1s 4ms/step - loss: 1.1392 - acc: 0.1364\n","Epoch 2/100\n","11/11 [==============================] - 0s 3ms/step - loss: 1.0567 - acc: 0.1364\n","Epoch 3/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.9841 - acc: 0.1364\n","Epoch 4/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.9202 - acc: 0.1364\n","Epoch 5/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.8628 - acc: 0.1364\n","Epoch 6/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.8132 - acc: 0.1364\n","Epoch 7/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.7703 - acc: 0.1364\n","Epoch 8/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.7328 - acc: 0.1364\n","Epoch 9/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.6997 - acc: 0.3693\n","Epoch 10/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.6705 - acc: 0.8636\n","Epoch 11/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.6447 - acc: 0.8636\n","Epoch 12/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.6218 - acc: 0.8636\n","Epoch 13/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.6015 - acc: 0.8636\n","Epoch 14/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5833 - acc: 0.8636\n","Epoch 15/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5671 - acc: 0.8636\n","Epoch 16/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5525 - acc: 0.8636\n","Epoch 17/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5394 - acc: 0.8636\n","Epoch 18/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5277 - acc: 0.8636\n","Epoch 19/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5170 - acc: 0.8636\n","Epoch 20/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5075 - acc: 0.8636\n","Epoch 21/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4988 - acc: 0.8636\n","Epoch 22/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4909 - acc: 0.8636\n","Epoch 23/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4838 - acc: 0.8636\n","Epoch 24/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4773 - acc: 0.8636\n","Epoch 25/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4714 - acc: 0.8636\n","Epoch 26/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4659 - acc: 0.8636\n","Epoch 27/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4610 - acc: 0.8636\n","Epoch 28/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4564 - acc: 0.8636\n","Epoch 29/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4523 - acc: 0.8636\n","Epoch 30/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4484 - acc: 0.8636\n","Epoch 31/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4449 - acc: 0.8636\n","Epoch 32/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4417 - acc: 0.8636\n","Epoch 33/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4387 - acc: 0.8636\n","Epoch 34/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4360 - acc: 0.8636\n","Epoch 35/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4334 - acc: 0.8636\n","Epoch 36/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4311 - acc: 0.8636\n","Epoch 37/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4289 - acc: 0.8636\n","Epoch 38/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4269 - acc: 0.8636\n","Epoch 39/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4250 - acc: 0.8636\n","Epoch 40/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4233 - acc: 0.8636\n","Epoch 41/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4217 - acc: 0.8636\n","Epoch 42/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4202 - acc: 0.8636\n","Epoch 43/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4188 - acc: 0.8636\n","Epoch 44/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4175 - acc: 0.8636\n","Epoch 45/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4163 - acc: 0.8636\n","Epoch 46/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4152 - acc: 0.8636\n","Epoch 47/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4142 - acc: 0.8636\n","Epoch 48/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4132 - acc: 0.8636\n","Epoch 49/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4123 - acc: 0.8636\n","Epoch 50/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4114 - acc: 0.8636\n","Epoch 51/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4106 - acc: 0.8636\n","Epoch 52/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4099 - acc: 0.8636\n","Epoch 53/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4092 - acc: 0.8636\n","Epoch 54/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4086 - acc: 0.8636\n","Epoch 55/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4080 - acc: 0.8636\n","Epoch 56/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4074 - acc: 0.8636\n","Epoch 57/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4068 - acc: 0.8636\n","Epoch 58/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4063 - acc: 0.8636\n","Epoch 59/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4059 - acc: 0.8636\n","Epoch 60/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4055 - acc: 0.8636\n","Epoch 61/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4051 - acc: 0.8636\n","Epoch 62/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4046 - acc: 0.8636\n","Epoch 63/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4043 - acc: 0.8636\n","Epoch 64/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4040 - acc: 0.8636\n","Epoch 65/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4036 - acc: 0.8636\n","Epoch 66/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4034 - acc: 0.8636\n","Epoch 67/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4031 - acc: 0.8636\n","Epoch 68/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4028 - acc: 0.8636\n","Epoch 69/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4025 - acc: 0.8636\n","Epoch 70/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4023 - acc: 0.8636\n","Epoch 71/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4021 - acc: 0.8636\n","Epoch 72/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4018 - acc: 0.8636\n","Epoch 73/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4016 - acc: 0.8636\n","Epoch 74/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4015 - acc: 0.8636\n","Epoch 75/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4013 - acc: 0.8636\n","Epoch 76/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4011 - acc: 0.8636\n","Epoch 77/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4010 - acc: 0.8636\n","Epoch 78/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4008 - acc: 0.8636\n","Epoch 79/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4007 - acc: 0.8636\n","Epoch 80/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4006 - acc: 0.8636\n","Epoch 81/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4005 - acc: 0.8636\n","Epoch 82/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4003 - acc: 0.8636\n","Epoch 83/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4002 - acc: 0.8636\n","Epoch 84/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4001 - acc: 0.8636\n","Epoch 85/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4000 - acc: 0.8636\n","Epoch 86/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3999 - acc: 0.8636\n","Epoch 87/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3998 - acc: 0.8636\n","Epoch 88/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3997 - acc: 0.8636\n","Epoch 89/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3997 - acc: 0.8636\n","Epoch 90/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3996 - acc: 0.8636\n","Epoch 91/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3995 - acc: 0.8636\n","Epoch 92/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3995 - acc: 0.8636\n","Epoch 93/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3994 - acc: 0.8636\n","Epoch 94/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3993 - acc: 0.8636\n","Epoch 95/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3993 - acc: 0.8636\n","Epoch 96/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3992 - acc: 0.8636\n","Epoch 97/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.3992 - acc: 0.8636\n","Epoch 98/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3992 - acc: 0.8636\n","Epoch 99/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3991 - acc: 0.8636\n","Epoch 100/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3991 - acc: 0.8636\n"]}]},{"cell_type":"code","source":["# 3. 시각화\n","plt.figure(figsize=(15, 5))\n","\n","plt.plot(h.history['acc'], label='acc')\n","\n","plt.legend()\n","plt.show()"],"metadata":{"id":"pnSPeG3Y8uND","executionInfo":{"status":"ok","timestamp":1692232643094,"user_tz":-540,"elapsed":638,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"colab":{"base_uri":"https://localhost:8080/","height":242},"outputId":"21557246-ae03-4533-f493-b4ee3d9072a1"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 4. 모델평가\n","model.evaluate(X_test, y_test)"],"metadata":{"id":"NG7gJBxS8uKj","executionInfo":{"status":"ok","timestamp":1692232703213,"user_tz":-540,"elapsed":449,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"82a0983b-51ae-4972-bccf-511f7b1d4206"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 8ms/step - loss: 0.4860 - acc: 0.8136\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.48596081137657166, 0.8135592937469482]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":[],"metadata":{"id":"nFegc3Rw8uH7","executionInfo":{"status":"ok","timestamp":1692232643095,"user_tz":-540,"elapsed":6,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"FtMo9XRa8uFc","executionInfo":{"status":"ok","timestamp":1692232643095,"user_tz":-540,"elapsed":5,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"6H57tGor8uC8","executionInfo":{"status":"ok","timestamp":1692232643095,"user_tz":-540,"elapsed":5,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"nNiksv8S8uAk","executionInfo":{"status":"ok","timestamp":1692232643095,"user_tz":-540,"elapsed":5,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"QDwrbWiM8t-D","executionInfo":{"status":"ok","timestamp":1692232643096,"user_tz":-540,"elapsed":6,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"zraFFcSv8t7M","executionInfo":{"status":"ok","timestamp":1692232643096,"user_tz":-540,"elapsed":6,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":13,"outputs":[]}]}