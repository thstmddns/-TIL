{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1a4pUKkMoZBnFeVXLrT1H2aZ6SkFY_mjh","authorship_tag":"ABX9TyMK1BWJWYJuU7o83DE4xzp0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### 목표\n","- 머신러닝에서 사용해봤던 iris품종 예측 다중 분류 문제를 신경망으로 풀어보자!!!"],"metadata":{"id":"uiLx7P5r32fd"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"D_L6rV--Fcn_","executionInfo":{"status":"ok","timestamp":1692242226012,"user_tz":-540,"elapsed":1234,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","# iris 데이터셋 임포트\n","from sklearn.datasets import load_iris"]},{"cell_type":"code","source":["data = load_iris()\n","data.keys()"],"metadata":{"id":"zraFFcSv8t7M","executionInfo":{"status":"ok","timestamp":1692242226013,"user_tz":-540,"elapsed":9,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f2e24b7d-9896-4bb8-e602-8ba3d3dc9b61"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['data', 'target', 'frame', 'target_names', 'DESCR', 'feature_names', 'filename', 'data_module'])"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["X = data['data']\n","y = data['target']\n","X.shape, y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fEmuH4uqWzxn","executionInfo":{"status":"ok","timestamp":1692242226013,"user_tz":-540,"elapsed":7,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"a80954e3-9f8a-4ad1-f5a7-73322691e73f"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((150, 4), (150,))"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x996pPDLXA1J","executionInfo":{"status":"ok","timestamp":1692242226013,"user_tz":-540,"elapsed":6,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"25ccb600-101f-45a7-ca1b-57611bbc6394"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["### 정답 데이터 인코딩\n","- 신경망 출력층에서 각 클래스 값들에 대한확률(0~1) 값과 비교하여 정확한 오차를 구하기 위해서 정답의 범위도 0~1 사이의 값으로 변환시켜줘야 함"],"metadata":{"id":"wUUpqKE6XY4x"}},{"cell_type":"code","source":["y_one_hot = pd.get_dummies(y)\n","y_one_hot"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"TAAeDhXwXYo5","executionInfo":{"status":"ok","timestamp":1692242226013,"user_tz":-540,"elapsed":5,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"2c5fe1bd-338b-4bfa-f0c2-2a68634f19bc"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     0  1  2\n","0    1  0  0\n","1    1  0  0\n","2    1  0  0\n","3    1  0  0\n","4    1  0  0\n","..  .. .. ..\n","145  0  0  1\n","146  0  0  1\n","147  0  0  1\n","148  0  0  1\n","149  0  0  1\n","\n","[150 rows x 3 columns]"],"text/html":["\n","\n","  <div id=\"df-70a3350e-5ec6-439e-baea-1996d242ed31\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70a3350e-5ec6-439e-baea-1996d242ed31')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-31cc482a-5848-41e1-89a8-fba301c4ceb3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31cc482a-5848-41e1-89a8-fba301c4ceb3')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-31cc482a-5848-41e1-89a8-fba301c4ceb3 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-70a3350e-5ec6-439e-baea-1996d242ed31 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-70a3350e-5ec6-439e-baea-1996d242ed31');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y_one_hot,\n","                                                    test_size = 0.2,\n","                                                    random_state= 55\n","                                                    )"],"metadata":{"id":"hbnGhvusXFW1","executionInfo":{"status":"ok","timestamp":1692242226013,"user_tz":-540,"elapsed":4,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print(X_test.shape)\n","print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uZVEyzlHYmVp","executionInfo":{"status":"ok","timestamp":1692242226014,"user_tz":-540,"elapsed":5,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"a4bb2498-e179-4670-b323-e7043b6a00b7"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["(120, 4)\n","(30, 4)\n","(120, 3)\n","(30, 3)\n"]}]},{"cell_type":"markdown","source":["### 신경망 모델링\n","- 1.신경망 구조설계\n","- 2.학습 및 평가 방법 설정\n","- 3.학습 + 시각화\n","- 4.모델평가"],"metadata":{"id":"mZxnPFHTZISY"}},{"cell_type":"code","source":["from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, InputLayer"],"metadata":{"id":"_8iR7TWCY1vU","executionInfo":{"status":"ok","timestamp":1692242233198,"user_tz":-540,"elapsed":7188,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","\n","model.add(Dense(50, input_dim = 4, activation = 'sigmoid'))\n","model.add(Dense(30, activation = 'sigmoid'))\n","model.add(Dense(10, activation = 'sigmoid'))\n","model.add(Dense(5, activation = 'sigmoid'))\n","\n","model.add(Dense(3, activation='softmax'))\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fi-Gtxcwdo3Q","executionInfo":{"status":"ok","timestamp":1692242341426,"user_tz":-540,"elapsed":569,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"1e721534-dd4b-4413-c2a5-46c89097e204"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_10 (Dense)            (None, 50)                250       \n","                                                                 \n"," dense_11 (Dense)            (None, 30)                1530      \n","                                                                 \n"," dense_12 (Dense)            (None, 10)                310       \n","                                                                 \n"," dense_13 (Dense)            (None, 5)                 55        \n","                                                                 \n"," dense_14 (Dense)            (None, 3)                 18        \n","                                                                 \n","=================================================================\n","Total params: 2,163\n","Trainable params: 2,163\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(loss='categorical_crossentropy',\n","              optimizer='Adam', # 최적화 함수 : 확률적 경사하강법(SGD) 활용\n","              metrics = ['acc']\n","              )"],"metadata":{"id":"WMW1OY6peXhI","executionInfo":{"status":"ok","timestamp":1692242446391,"user_tz":-540,"elapsed":470,"user":{"displayName":"손승운","userId":"00092384217558170782"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["h = model.fit(X_train, y_train,\n","              epochs=100\n","              )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xfWKkYPMeICS","executionInfo":{"status":"ok","timestamp":1692242451399,"user_tz":-540,"elapsed":4448,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"e5614b65-61cb-4963-ee09-b7fef1b58a55"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","4/4 [==============================] - 2s 5ms/step - loss: 1.0321 - acc: 0.4500\n","Epoch 2/100\n","4/4 [==============================] - 0s 5ms/step - loss: 1.0280 - acc: 0.6250\n","Epoch 3/100\n","4/4 [==============================] - 0s 5ms/step - loss: 1.0243 - acc: 0.6750\n","Epoch 4/100\n","4/4 [==============================] - 0s 6ms/step - loss: 1.0206 - acc: 0.8167\n","Epoch 5/100\n","4/4 [==============================] - 0s 7ms/step - loss: 1.0170 - acc: 0.9167\n","Epoch 6/100\n","4/4 [==============================] - 0s 6ms/step - loss: 1.0131 - acc: 0.9167\n","Epoch 7/100\n","4/4 [==============================] - 0s 6ms/step - loss: 1.0089 - acc: 0.9250\n","Epoch 8/100\n","4/4 [==============================] - 0s 5ms/step - loss: 1.0047 - acc: 0.9333\n","Epoch 9/100\n","4/4 [==============================] - 0s 5ms/step - loss: 1.0005 - acc: 0.9417\n","Epoch 10/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.9962 - acc: 0.9583\n","Epoch 11/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.9915 - acc: 0.9583\n","Epoch 12/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.9869 - acc: 0.9583\n","Epoch 13/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.9821 - acc: 0.9667\n","Epoch 14/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.9773 - acc: 0.9667\n","Epoch 15/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.9721 - acc: 0.9667\n","Epoch 16/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.9670 - acc: 0.9667\n","Epoch 17/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.9618 - acc: 0.9667\n","Epoch 18/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.9563 - acc: 0.9667\n","Epoch 19/100\n","4/4 [==============================] - 0s 8ms/step - loss: 0.9511 - acc: 0.9667\n","Epoch 20/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.9457 - acc: 0.9500\n","Epoch 21/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.9405 - acc: 0.9500\n","Epoch 22/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.9347 - acc: 0.9333\n","Epoch 23/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.9290 - acc: 0.9500\n","Epoch 24/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.9233 - acc: 0.9500\n","Epoch 25/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.9177 - acc: 0.9417\n","Epoch 26/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.9118 - acc: 0.9250\n","Epoch 27/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.9060 - acc: 0.9250\n","Epoch 28/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.8999 - acc: 0.9333\n","Epoch 29/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8940 - acc: 0.9333\n","Epoch 30/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8878 - acc: 0.9333\n","Epoch 31/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8816 - acc: 0.9333\n","Epoch 32/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.8753 - acc: 0.9500\n","Epoch 33/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8693 - acc: 0.9333\n","Epoch 34/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8626 - acc: 0.9333\n","Epoch 35/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8562 - acc: 0.9333\n","Epoch 36/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.8496 - acc: 0.9333\n","Epoch 37/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.8429 - acc: 0.9417\n","Epoch 38/100\n","4/4 [==============================] - 0s 8ms/step - loss: 0.8362 - acc: 0.9333\n","Epoch 39/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.8293 - acc: 0.9333\n","Epoch 40/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.8223 - acc: 0.9333\n","Epoch 41/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8153 - acc: 0.9417\n","Epoch 42/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8082 - acc: 0.9417\n","Epoch 43/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.8012 - acc: 0.9500\n","Epoch 44/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.7940 - acc: 0.9500\n","Epoch 45/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.7866 - acc: 0.9583\n","Epoch 46/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.7795 - acc: 0.9583\n","Epoch 47/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.7723 - acc: 0.9583\n","Epoch 48/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.7649 - acc: 0.9583\n","Epoch 49/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.7579 - acc: 0.9583\n","Epoch 50/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.7507 - acc: 0.9667\n","Epoch 51/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.7434 - acc: 0.9667\n","Epoch 52/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.7363 - acc: 0.9667\n","Epoch 53/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.7293 - acc: 0.9667\n","Epoch 54/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.7222 - acc: 0.9667\n","Epoch 55/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.7151 - acc: 0.9667\n","Epoch 56/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.7082 - acc: 0.9667\n","Epoch 57/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.7015 - acc: 0.9667\n","Epoch 58/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6946 - acc: 0.9667\n","Epoch 59/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6879 - acc: 0.9667\n","Epoch 60/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.6811 - acc: 0.9667\n","Epoch 61/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.6746 - acc: 0.9667\n","Epoch 62/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6680 - acc: 0.9667\n","Epoch 63/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6615 - acc: 0.9667\n","Epoch 64/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6553 - acc: 0.9667\n","Epoch 65/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6488 - acc: 0.9667\n","Epoch 66/100\n","4/4 [==============================] - 0s 9ms/step - loss: 0.6428 - acc: 0.9667\n","Epoch 67/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6367 - acc: 0.9667\n","Epoch 68/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6307 - acc: 0.9667\n","Epoch 69/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.6247 - acc: 0.9667\n","Epoch 70/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6186 - acc: 0.9667\n","Epoch 71/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.6128 - acc: 0.9667\n","Epoch 72/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.6071 - acc: 0.9667\n","Epoch 73/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.6021 - acc: 0.9667\n","Epoch 74/100\n","4/4 [==============================] - 0s 4ms/step - loss: 0.5959 - acc: 0.9667\n","Epoch 75/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5904 - acc: 0.9667\n","Epoch 76/100\n","4/4 [==============================] - 0s 8ms/step - loss: 0.5850 - acc: 0.9667\n","Epoch 77/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5798 - acc: 0.9667\n","Epoch 78/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.5748 - acc: 0.9667\n","Epoch 79/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.5695 - acc: 0.9667\n","Epoch 80/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5644 - acc: 0.9667\n","Epoch 81/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.5591 - acc: 0.9667\n","Epoch 82/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5545 - acc: 0.9667\n","Epoch 83/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5502 - acc: 0.9667\n","Epoch 84/100\n","4/4 [==============================] - 0s 7ms/step - loss: 0.5446 - acc: 0.9667\n","Epoch 85/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5398 - acc: 0.9667\n","Epoch 86/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5355 - acc: 0.9667\n","Epoch 87/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.5308 - acc: 0.9667\n","Epoch 88/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.5261 - acc: 0.9667\n","Epoch 89/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5215 - acc: 0.9667\n","Epoch 90/100\n","4/4 [==============================] - 0s 8ms/step - loss: 0.5172 - acc: 0.9667\n","Epoch 91/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5132 - acc: 0.9667\n","Epoch 92/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.5085 - acc: 0.9667\n","Epoch 93/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5046 - acc: 0.9667\n","Epoch 94/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.5003 - acc: 0.9667\n","Epoch 95/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.4962 - acc: 0.9667\n","Epoch 96/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.4921 - acc: 0.9667\n","Epoch 97/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.4879 - acc: 0.9667\n","Epoch 98/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.4840 - acc: 0.9667\n","Epoch 99/100\n","4/4 [==============================] - 0s 6ms/step - loss: 0.4801 - acc: 0.9667\n","Epoch 100/100\n","4/4 [==============================] - 0s 5ms/step - loss: 0.4762 - acc: 0.9667\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(15, 5))\n","\n","plt.plot(h.history['acc'], label='acc')\n","\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":239},"id":"wPPQ8GxQeSkz","executionInfo":{"status":"ok","timestamp":1692242452172,"user_tz":-540,"elapsed":775,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"346eeca5-d085-4a10-9c78-7db617be91ca"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lx1rpgdmgQox","executionInfo":{"status":"ok","timestamp":1692242487179,"user_tz":-540,"elapsed":989,"user":{"displayName":"손승운","userId":"00092384217558170782"}},"outputId":"97beb643-1476-447a-875f-99e82d6e99e9"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 1s 538ms/step - loss: 0.4772 - acc: 0.9667\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.4771870970726013, 0.9666666388511658]"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":[],"metadata":{"id":"ZvOvFciWgyAY"},"execution_count":null,"outputs":[]}]}